# Migration file for "story" node data from Drupal 6.
#
# This file demonstrates migration of content translated with
# the 'content_translation' module.
#
# A detailed description of many configuration parameters
# has been provided in this migration. Thus, if you do not know
# where to start, this would be a good place to get started.

# Migration metadata
id: hybrid_base
label: Story data from Drupal 6
migration_tags:
  - node
  - story
  - d6
# Migration source
source:
  # Since we want to migrate nodes from Drupal 6, we need to
  # use the 'd6_node' source plugin. The plugin is introduced
  # by the 'migrate_drupal' module and provides all basic
  # functionality one needs to migrate Drupal 6 nodes.
  #
  # If you need additional functionality, you can create your
  # plugin derived from this one. Something similar has been
  # demonstrated for Drupal 7 nodes in case you are interested
  # in learning how to write a custom source plugin.
  plugin: d6_node
  # The type of nodes we want to migrate.
  #
  # This parameter tells the source plugin that only nodes of
  # type 'story' are to be read from the Drupal 6 database.
  node_type: story
  # Specify source database.
  #
  # The database settings need to be defined in the global
  # $databases variable. See the sample 'settings.local.php'
  # file provided in the project to learn how to add these
  # settings. For this example, the settings are in
  # $databases['drupal_7a']['default']. The database 'target'
  # defaults to 'default' depending on your settings. I
  # included it here for showing it's existence and usage.
  key: drupal_6
  target: default
  # Static values for the migration.
  constants:
    uid_root: 1
    node_article: article
    body_format: full_html
# Migration destination
destination:
  # Since we want to create 'node' entities from the source data,
  # we specify 'entity:node' as the destination plugin.
  plugin: 'entity:node'
# Migration processes
process:
  # Specify the type of node we wish to create.
  #
  # We are interested in creating 'article' nodes in this example.
  type: constants/node_article
  # Destination node language.
  #
  # If some node is missing a language, we fallback to 'und',
  # however, I do not think we will ever stumble upon such a case.
  langcode:
    plugin: default_value
    source: language
    default_value: und
  # Some other properties which we migrate as is.
  #
  # Here, the 'body' property is a special case because if we do
  # 'body: body', the old body is copied into Drupal 8, however it
  # is not treated as 'Full HTML'. To remedy that, 'body' data from
  # the Drupal 6 site has been assigned to 'body/value' and the
  # 'body/format' property is explicitly specified as 'full_html'.
  title: title
  'body/value': body
  'body/format': constants/body_format
  uid: constants/uid_root
  sticky: sticky
  status: status
  promote: promote
# General dependencies
#
# We tell Drupal that this particular piece of configuration depends
# on our custom module. In case the module gets uninstalled, the
# configuration will also be uninstalled.
dependencies:
  enforced:
    module:
      - c11n_migrate_i18n
